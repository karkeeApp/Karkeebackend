apiVersion: apps/v1
kind: Deployment
metadata:
  name: karkee-staging-nginx-dashboard-deployment
  namespace: development
spec:
  selector:
    matchLabels:
        app: nginx-dashboard
  replicas: 3
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nginx-dashboard
    spec:
      containers:
      - name: karkee-staging-api
        image: gcr.io/agile-infinity-329404/dev.api.karkee.biz:latest
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.2"
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
        - name: www-storage
          mountPath: /var/www/html/apicarkee/web
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.2"
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/apikarkee.conf
        - name: www-storage
          mountPath: /var/www/html/apicarkee/web
        resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.2"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: www-storage
        persistentVolumeClaim:
          claimName: pv-www-claim
      - name: nginx-config-volume
        configMap:
          name: nginx-config