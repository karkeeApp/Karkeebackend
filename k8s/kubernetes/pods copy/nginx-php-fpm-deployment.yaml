apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: karkee-app-staging
  name: karkee-staging-deployment
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: karkee-app-staging
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: karkee-app-staging
    spec:
      containers:
      - name: karkee-app-staging-api
        image: fdc101082/dev.api.karkee.biz:app-api-XXXX
        imagePullPolicy: Never
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: apikarkee.conf
        - name: www-storage
          mountPath: /var/www/html/apicarkee/web
      - name: nginx
        image: nginx:alpine
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        - name: www-storage
          mountPath: /var/www/html
          resources:
          limits:
            memory: 512Mi
            cpu: "1"
          requests:
            memory: 256Mi
            cpu: "0.2"
        - name: karkee-app-staging-phpmyadmin
          image: phpmyadmin/phpmyadmin
          env:
            - name: PMA_HOST
              value: mysql-service
            - name: PMA_PORT
              value: "3306"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: root-password
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          volumeMounts:
          - name: nginx-config-volume
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          - name: www-storage
            mountPath: /var/www/phpmyadmin/
            resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      serviceAccountName: ""
      volumes:
      - name: www-storage
        persistentVolumeClaim:
          claimName: pv-www-claim
      - name: nginx-config-volume
        configMap:
          name: api-nginx-config
